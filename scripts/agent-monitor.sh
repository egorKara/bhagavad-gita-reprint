#!/bin/bash

# ü§ñ AGENT MONITORING SCRIPT
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ Cursor –∞–≥–µ–Ω—Ç–æ–≤
# –í–µ—Ä—Å–∏—è: 1.0
# –î–∞—Ç–∞: 26 –∞–≤–≥—É—Å—Ç–∞ 2025

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Cursor –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
check_cursor_configs() {
    log_info "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π Cursor..."
    
    local configs=(
        ".cursor/settings.json"
        ".cursor/environment.json"
        ".cursor/rules/agent-priorities.mdc"
        ".cursor/sync-status.log"
    )
    
    for config in "${configs[@]}"; do
        if [[ -f "$config" ]]; then
            log_success "‚úÖ $config –Ω–∞–π–¥–µ–Ω"
        else
            log_warning "‚ö†Ô∏è $config –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        fi
    done
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–≥–µ–Ω—Ç–æ–≤
check_agent_status() {
    log_info "ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–≥–µ–Ω—Ç–æ–≤..."
    
    if [[ -f ".cursor/sync-status.log" ]]; then
        echo "üìã –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:"
        tail -5 .cursor/sync-status.log
        echo
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–≤–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        local last_sync=$(stat -c %Y .cursor/sync-status.log 2>/dev/null || echo 0)
        local current_time=$(date +%s)
        local diff=$((current_time - last_sync))
        local hours=$((diff / 3600))
        
        if [[ $hours -lt 24 ]]; then
            log_success "‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–∞ ($hours —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥)"
        else
            log_warning "‚ö†Ô∏è –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞ ($hours —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥)"
        fi
    else
        log_error "‚ùå –õ–æ–≥ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ –∞–≥–µ–Ω—Ç–æ–≤
check_agent_priorities() {
    log_info "üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ –∞–≥–µ–Ω—Ç–æ–≤..."
    
    if [[ -f ".cursor/rules/agent-priorities.mdc" ]]; then
        echo "üìã –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:"
        grep -A 10 "–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ü–†–ò–û–†–ò–¢–ï–¢" .cursor/rules/agent-priorities.mdc | head -15
        echo
        log_success "‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
    else
        log_error "‚ùå –§–∞–π–ª –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Memory Bank
check_memory_bank() {
    log_info "üß† –ü—Ä–æ–≤–µ—Ä–∫–∞ Memory Bank..."
    
    local memory_files=$(find .cursor/memory-bank/ -name "*.md" 2>/dev/null | wc -l)
    
    if [[ $memory_files -gt 0 ]]; then
        log_success "‚úÖ Memory Bank: $memory_files —Ñ–∞–π–ª–æ–≤"
        
        # –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Memory Bank:"
        find .cursor/memory-bank/ -name "*.md" -exec ls -la {} \; | head -5
        echo
    else
        log_warning "‚ö†Ô∏è Memory Bank –ø—É—Å—Ç –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∏ —Å–µ—Ä–≤–∏—Å–æ–≤ (–∫–∞–∫ –¥–µ–ª–∞—é—Ç –∞–≥–µ–Ω—Ç—ã)
check_services() {
    log_info "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (–∫–∞–∫ –∞–≥–µ–Ω—Ç—ã)..."
    
    # API –ø—Ä–æ–≤–µ—Ä–∫–∞
    if curl -s --max-time 5 "https://api.gita-1972-reprint.ru/api/status" > /dev/null; then
        log_success "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        log_error "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç
    if curl -s --max-time 5 "https://gita-1972-reprint.ru/" > /dev/null; then
        log_success "‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        log_error "‚ùå –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ GitHub
check_github_automation() {
    log_info "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏..."
    
    if [[ -f ".github/workflows/sync-project-todo.yml" ]]; then
        log_success "‚úÖ Workflow —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ TODO –Ω–∞–π–¥–µ–Ω"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø—É—Å–∫–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å git log)
        if git log --oneline -n 5 --grep="sync" &>/dev/null; then
            echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ sync –∫–æ–º–º–∏—Ç—ã:"
            git log --oneline -n 3 --grep="sync" || echo "–ù–µ—Ç sync –∫–æ–º–º–∏—Ç–æ–≤"
        fi
    else
        log_warning "‚ö†Ô∏è GitHub workflow –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
generate_report() {
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    local report_file=".cursor/agent-monitor-report.log"
    
    {
        echo "=== AGENT MONITOR REPORT ==="
        echo "–í—Ä–µ–º—è: $timestamp"
        echo "–•–æ—Å—Ç: $(hostname)"
        echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
        echo
        echo "–°–¢–ê–¢–£–° –ö–û–ú–ü–û–ù–ï–ù–¢–û–í:"
        echo "- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: $(ls .cursor/*.json 2>/dev/null | wc -l) —Ñ–∞–π–ª–æ–≤"
        echo "- Memory Bank: $(find .cursor/memory-bank/ -name "*.md" 2>/dev/null | wc -l) —Ñ–∞–π–ª–æ–≤"
        echo "- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã: $(test -f .cursor/rules/agent-priorities.mdc && echo "OK" || echo "MISSING")"
        echo "- –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: $(test -f .cursor/sync-status.log && stat -c %y .cursor/sync-status.log || echo "–ù–ï–¢ –î–ê–ù–ù–´–•")"
        echo
    } > "$report_file"
    
    log_success "üìä –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $report_file"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "ü§ñ CURSOR AGENT MONITOR"
    echo "======================="
    echo "–î–∞—Ç–∞: $(date)"
    echo "–ü—Ä–æ–µ–∫—Ç: Bhagavad Gita 1972 Reprint"
    echo
    
    check_cursor_configs
    echo
    
    check_agent_status
    echo
    
    check_agent_priorities
    echo
    
    check_memory_bank
    echo
    
    check_services
    echo
    
    check_github_automation
    echo
    
    generate_report
    
    echo
    log_info "üéØ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω"
    echo "üí° –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å–º–æ—Ç—Ä–∏—Ç–µ: .cursor/agent-monitor-report.log"
}

# –ó–∞–ø—É—Å–∫
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
