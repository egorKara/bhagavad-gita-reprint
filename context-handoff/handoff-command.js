/**
 * üöÄ HANDOFF COMMAND - –ì–ª–∞–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
 * –ü—Ä–æ—Å—Ç–∞—è –∫–æ–º–∞–Ω–¥–∞ /handoff –¥–ª—è –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –º–æ–±–∏–ª—å–Ω–æ–º—É –∞–≥–µ–Ω—Ç—É
 */

const ContextSerializer = require('./context-serializer');
const QRHandoffGenerator = require('./qr-handoff-generator');
const path = require('path');
const fs = require('fs').promises;

class HandoffCommand {
    constructor() {
        this.contextSerializer = new ContextSerializer();
        this.qrGenerator = new QRHandoffGenerator();
        this.isHandoffInProgress = false;
    }

    /**
     * ü§Ø –ì–ª–∞–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ /handoff
     */
    async executeHandoff(options = {}) {
        if (this.isHandoffInProgress) {
            return this.error('‚ö†Ô∏è Handoff —É–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è. –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.');
        }

        this.isHandoffInProgress = true;
        console.log('ü§Ø –ù–ê–ß–ò–ù–ê–Æ CONTEXT HANDOFF...');
        console.log('================================');

        try {
            // üéØ –≠—Ç–∞–ø 1: –°–±–æ—Ä –≤—Å–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            console.log('üì¶ –≠—Ç–∞–ø 1/4: –°–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞...');
            const contextPackage = await this.contextSerializer.createContextPackage();

            // üîê –≠—Ç–∞–ø 2: –°–æ–∑–¥–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏
            console.log('üîê –≠—Ç–∞–ø 2/4: –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø–µ—Ä–µ–¥–∞—á–µ...');
            const handoffData = await this.qrGenerator.generateHandoffQR(contextPackage);

            // üì± –≠—Ç–∞–ø 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR –∫–æ–¥–∞
            console.log('üì± –≠—Ç–∞–ø 3/4: –°–æ–∑–¥–∞–Ω–∏–µ QR –∫–æ–¥–∞...');
            const instructions = await this.createUserInstructions(handoffData);

            // ‚úÖ –≠—Ç–∞–ø 4: –ì–æ—Ç–æ–≤–æ –∫ –ø–µ—Ä–µ–¥–∞—á–µ
            console.log('‚úÖ –≠—Ç–∞–ø 4/4: Handoff –≥–æ—Ç–æ–≤!');

            const result = {
                success: true,
                handoffId: handoffData.handoffId,
                qrCodePath: handoffData.qrCodePath,
                expiresAt: handoffData.expiresAt,
                instructions,
                stats: {
                    contextSize: JSON.stringify(contextPackage).length,
                    todosCount: contextPackage.todos.active.length,
                    memoryItems: contextPackage.agentMemory.keyMemories.length,
                    generatedAt: new Date().toISOString(),
                },
            };

            await this.saveHandoffSummary(result);
            this.isHandoffInProgress = false;

            return result;
        } catch (error) {
            this.isHandoffInProgress = false;
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è handoff:', error);
            return this.error(`–û—à–∏–±–∫–∞ handoff: ${error.message}`);
        }
    }

    /**
     * üìã –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async createUserInstructions(handoffData) {
        const instructions = {
            title: 'ü§Ø CONTEXT HANDOFF –ì–û–¢–û–í!',
            subtitle: '–ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –º–æ–±–∏–ª—å–Ω–æ–º—É –∞–≥–µ–Ω—Ç—É',

            quickStart: {
                step1: 'üì± –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR –∫–æ–¥ –Ω–∞ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–µ',
                step2: 'üîê –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞',
                step3: 'üß† –ú–æ–±–∏–ª—å–Ω—ã–π –∞–≥–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!',
                estimated: '‚è±Ô∏è 30 —Å–µ–∫—É–Ω–¥ –¥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏',
            },

            qrCode: {
                path: handoffData.qrCodePath,
                note: 'QR –∫–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç',
            },

            security: {
                encryption: 'üîí AES-256-GCM —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ',
                expiration: `‚è∞ –ò—Å—Ç–µ–∫–∞–µ—Ç –≤ ${handoffData.expiresAt.toLocaleTimeString()}`,
                autoDelete: 'üóëÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è',
                authentication: 'üîê –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–∞—à–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è',
            },

            troubleshooting: {
                qrIssues: 'üì± QR –Ω–µ —Å–∫–∞–Ω–∏—Ä—É–µ—Ç—Å—è? –£–≤–µ–ª–∏—á—å—Ç–µ —è—Ä–∫–æ—Å—Ç—å —ç–∫—Ä–∞–Ω–∞',
                networkIssues: 'üåê –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞? –ü—Ä–æ–≤–µ—Ä—å—Ç–µ WiFi —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ',
                expired: '‚è∞ –ò—Å—Ç–µ–∫–ª–æ –≤—Ä–µ–º—è? –í—ã–ø–æ–ª–Ω–∏—Ç–µ /handoff –∑–∞–Ω–æ–≤–æ',
                agentIssues: 'ü§ñ –ê–≥–µ–Ω—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç? –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ—Ä—Å–∏—é –º–æ–±–∏–ª—å–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞',
            },

            whatTransferred: {
                todos: 'üìã –í—Å–µ TODO —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º',
                chat: 'üí¨ –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Ä–µ—à–µ–Ω–∏—è–º–∏',
                system: 'üñ•Ô∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã',
                memory: 'üß† –ü–æ–ª–Ω–∞—è –ø–∞–º—è—Ç—å AI –∞–≥–µ–Ω—Ç–∞',
                project: 'üìÅ –ö–æ–Ω—Ç–µ–∫—Å—Ç –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞',
                security: 'üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ)',
            },
        };

        return instructions;
    }

    /**
     * üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–≤–æ–¥–∫–∏ handoff
     */
    async saveHandoffSummary(result) {
        try {
            const summaryDir = path.join(process.cwd(), 'context-handoff', 'summaries');
            await fs.mkdir(summaryDir, { recursive: true });

            const summaryFile = path.join(summaryDir, `handoff_${result.handoffId}.json`);
            await fs.writeFile(summaryFile, JSON.stringify(result, null, 2));

            console.log(`üìã –°–≤–æ–¥–∫–∞ handoff —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: ${summaryFile}`);
        } catch (error) {
            console.error('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–≤–æ–¥–∫—É:', error);
        }
    }

    /**
     * üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ handoff
     */
    async getHandoffInfo() {
        try {
            const stats = await this.qrGenerator.getHandoffStats();
            const recentHandoffs = await this.getRecentHandoffs();

            return {
                system: {
                    version: '1.0.0-MVP',
                    status: this.isHandoffInProgress ? '–í –ø—Ä–æ—Ü–µ—Å—Å–µ' : '–ì–æ—Ç–æ–≤',
                    capabilities: [
                        'QR –∫–æ–¥ –ø–µ—Ä–µ–¥–∞—á–∞',
                        'AES-256 —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ',
                        '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ',
                        '–ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç',
                    ],
                },
                stats,
                recent: recentHandoffs,
            };
        } catch (error) {
            return { error: error.message };
        }
    }

    /**
     * üìú –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ–¥–∞–≤–Ω–∏—Ö handoff
     */
    async getRecentHandoffs() {
        try {
            const summaryDir = path.join(process.cwd(), 'context-handoff', 'summaries');
            const files = await fs.readdir(summaryDir).catch(() => []);

            const recent = [];
            for (const file of files.slice(-5)) {
                try {
                    const content = await fs.readFile(path.join(summaryDir, file), 'utf8');
                    const handoff = JSON.parse(content);
                    recent.push({
                        id: handoff.handoffId,
                        date: handoff.stats.generatedAt,
                        success: handoff.success,
                        todosCount: handoff.stats.todosCount,
                    });
                } catch (e) {
                    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø–æ–≤—Ä–µ–∂–¥—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
                }
            }

            return recent.reverse(); // –ù–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É
        } catch (error) {
            return [];
        }
    }

    /**
     * üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö handoff
     */
    async cleanupOldHandoffs() {
        try {
            const dirs = [
                path.join(process.cwd(), 'context-handoff', 'temp'),
                path.join(process.cwd(), 'context-handoff', 'qr-codes'),
                path.join(process.cwd(), 'context-handoff', 'summaries'),
            ];

            let cleaned = 0;
            for (const dir of dirs) {
                try {
                    const files = await fs.readdir(dir);
                    for (const file of files) {
                        const filePath = path.join(dir, file);
                        const stat = await fs.stat(filePath);

                        // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤
                        if (Date.now() - stat.mtime.getTime() > 24 * 60 * 60 * 1000) {
                            await fs.unlink(filePath);
                            cleaned++;
                        }
                    }
                } catch (e) {
                    // –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –º–æ–∂–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å
                }
            }

            return { cleaned, message: `–û—á–∏—â–µ–Ω–æ ${cleaned} —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤` };
        } catch (error) {
            return { error: error.message };
        }
    }

    /**
     * ‚ùå –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
     */
    error(message) {
        return {
            success: false,
            error: message,
            timestamp: new Date().toISOString(),
        };
    }

    /**
     * üì± –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π handoff
     */
    async demoHandoff() {
        console.log('üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø CONTEXT HANDOFF');
        console.log('===============================');
        console.log('');
        console.log('üí° –≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–µ—Ä–µ–¥–∞—á–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞:');
        console.log('');
        console.log('1. üì¶ –°–æ–±–∏—Ä–∞–µ–º –≤–µ—Å—å –∫–æ–Ω—Ç–µ–∫—Å—Ç (TODO, —á–∞—Ç, –ø–∞–º—è—Ç—å, —Å–∏—Å—Ç–µ–º—ã)');
        console.log('2. üîê –®–∏—Ñ—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ AES-256');
        console.log('3. üì± –°–æ–∑–¥–∞—ë–º QR –∫–æ–¥ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏');
        console.log('4. ‚ö° 30 —Å–µ–∫—É–Ω–¥ –¥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞');
        console.log('');
        console.log('üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π handoff: /handoff');

        return {
            demo: true,
            message: '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Context Handoff —Å–∏—Å—Ç–µ–º—ã',
            realCommand: '/handoff',
        };
    }
}

module.exports = HandoffCommand;
