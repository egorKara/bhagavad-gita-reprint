#!/bin/bash

# =============================================
# üîß –ê–î–ê–ü–¢–ò–†–û–í–ê–ù–ù–´–ô SSL –°–ö–†–ò–ü–¢
# ssl_fix_script.sh
# –†–µ—à–µ–Ω–∏–µ SSL –ø—Ä–æ–±–ª–µ–º—ã –¥–ª—è api.gita-1972-reprint.ru
# =============================================

DOMAIN="api.gita-1972-reprint.ru"
WWW_DIR="/var/www/html"
APP_DIR="/var/www/gita-1972-reprint"
CERT_DIR="/etc/letsencrypt/live/$DOMAIN"
LOG_FILE="/var/log/ssl_fix_script.log"
DATE=$(date +"%Y-%m-%d %T")

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –ª–æ–≥–∞
> "$LOG_FILE"

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–≤–æ–¥ –ª–æ–≥–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
trap 'echo "üìÑ –ü–æ–ª–Ω—ã–π –ª–æ–≥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:"; cat "$LOG_FILE"; echo "‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à—ë–Ω. –°–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥ –≤—ã—à–µ."' EXIT

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
log() {
    echo "[$(date +"%Y-%m-%d %T")] $1" | tee -a "$LOG_FILE"
}

error() {
    log "‚ùå –û–®–ò–ë–ö–ê: $1"
    exit 1
}

success() {
    log "‚úÖ $1"
}

# =============================================
# 1. –ü–†–û–í–ï–†–ö–ê DNS
# =============================================
log "üåê –ü—Ä–æ–≤–µ—Ä—è—é DNS-–∑–∞–ø–∏—Å—å –¥–æ–º–µ–Ω–∞ $DOMAIN"
IP=$(dig +short "$DOMAIN" | tail -n1)
LOCAL_IP=$(hostname -I | awk '{print $1}')

if [ -z "$IP" ]; then
    error "–î–æ–º–µ–Ω $DOMAIN –Ω–µ —Ä–µ–∑–æ–ª–≤–∏—Ç—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ DNS-–Ω–∞—Å—Ç—Ä–æ–π–∫–∏."
fi

if [ "$IP" != "$LOCAL_IP" ]; then
    log "‚ö†Ô∏è  DNS —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ $IP, –∞ —Å–µ—Ä–≤–µ—Ä –∏–º–µ–µ—Ç IP $LOCAL_IP"
    log "‚ö†Ô∏è  –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π SSL –ø—Ä–æ–±–ª–µ–º"
fi
success "DNS –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: $DOMAIN ‚Üí $IP"

# =============================================
# 2. –ü–†–û–í–ï–†–ö–ê –ü–†–û–ï–ö–¢–ê
# =============================================
log "üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞..."
if [ ! -f "$APP_DIR/package.json" ]; then
    error "–ù–µ –Ω–∞–π–¥–µ–Ω package.json –≤ $APP_DIR"
fi

if [ ! -f "$APP_DIR/src/server.js" ]; then
    error "–ù–µ –Ω–∞–π–¥–µ–Ω src/server.js –≤ $APP_DIR"
fi

success "–ü—Ä–æ–µ–∫—Ç –Ω–∞–π–¥–µ–Ω: $APP_DIR"

# =============================================
# 3. –û–ß–ò–°–¢–ö–ê NGINX –û–¢ –†–ï–î–ò–†–ï–ö–¢–û–í
# =============================================
log "üßπ –û—á–∏—â–∞—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx –æ—Ç —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤"
sudo rm -f /etc/nginx/sites-enabled/*
sudo rm -f /etc/nginx/sites-available/"$DOMAIN"

# –£–¥–∞–ª—è–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã –∏–∑ nginx.conf
sudo sed -i '/return 301 https/d' /etc/nginx/nginx.conf 2>/dev/null || true
sudo sed -i '/rewrite ^ https/d' /etc/nginx/nginx.conf 2>/dev/null || true
sudo sed -i '/if ($scheme = http)/,+2d' /etc/nginx/nginx.conf 2>/dev/null || true

# –°–æ–∑–¥–∞—ë–º —á–∏—Å—Ç—ã–π –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è ACME challenge
NGINX_CONFIG="/etc/nginx/sites-available/$DOMAIN"
cat << 'EOF_NGINX' | sudo tee "$NGINX_CONFIG" > /dev/null
server {
    listen 80;
    server_name DOMAIN;

    location ^~ /.well-known/acme-challenge/ {
        root /var/www/html;
        default_type text/plain;
    }

    location / {
        return 404;
    }
}
EOF_NGINX

sudo sed -i "s/DOMAIN/$DOMAIN/g" "$NGINX_CONFIG"
sudo ln -sf "$NGINX_CONFIG" /etc/nginx/sites-enabled/

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
if ! sudo nginx -t >> "$LOG_FILE" 2>&1; then
    error "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Nginx"
fi

sudo systemctl reload nginx
success "Nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è HTTP-–ø—Ä–æ–≤–µ—Ä–∫–∏"

# =============================================
# 4. –°–û–ó–î–ê–ù–ò–ï –î–ò–†–ï–ö–¢–û–†–ò–ò –î–õ–Ø ACME
# =============================================
sudo mkdir -p "$WWW_DIR/.well-known/acme-challenge"
echo "test" | sudo tee "$WWW_DIR/.well-known/acme-challenge/test" > /dev/null
sudo chown -R www-data:www-data "$WWW_DIR"
sudo chmod -R 755 "$WWW_DIR"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
if ! curl -f -s "http://localhost/.well-known/acme-challenge/test" | grep -q "test"; then
    error "–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –∏ —Ñ–∞–µ—Ä–≤–æ–ª."
fi
success "–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ HTTP"

# =============================================
# 5. –ü–û–õ–£–ß–ï–ù–ò–ï SSL-–°–ï–†–¢–ò–§–ò–ö–ê–¢–ê
# =============================================
log "üîê –ü–æ–ª—É—á–∞—é SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç Let's Encrypt..."
sudo certbot certonly --webroot -w "$WWW_DIR" -d "$DOMAIN" --non-interactive --agree-tos --email admin@gita-1972-reprint.ru --keep-until-expiring >> "$LOG_FILE" 2>&1

if [ ! -d "$CERT_DIR" ]; then
    error "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Certbot."
fi
success "SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—É—á–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ $CERT_DIR"

# =============================================
# 6. –§–ò–ù–ê–õ–¨–ù–´–ô –ö–û–ù–§–ò–ì NGINX (HTTPS)
# =============================================
log "üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é —Ñ–∏–Ω–∞–ª—å–Ω—ã–π HTTPS –∫–æ–Ω—Ñ–∏–≥ Nginx"
cat << 'EOF_HTTPS' | sudo tee "$NGINX_CONFIG" > /dev/null
server {
    listen 80;
    server_name DOMAIN;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name DOMAIN;

    ssl_certificate /etc/letsencrypt/live/DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/DOMAIN/privkey.pem;

    # SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;

    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è API
    add_header Access-Control-Allow-Origin "https://gita-1972-reprint.ru" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;

    location / {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://gita-1972-reprint.ru";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        # –ü—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Node.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # –¢–∞–π–º–∞—É—Ç—ã
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    access_log /var/log/nginx/api.gita-access.log;
    error_log /var/log/nginx/api.gita-error.log;

    # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    client_max_body_size 10M;
}
EOF_HTTPS

sudo sed -i "s/DOMAIN/$DOMAIN/g" "$NGINX_CONFIG"

if ! sudo nginx -t >> "$LOG_FILE" 2>&1; then
    error "–û—à–∏–±–∫–∞ –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º –∫–æ–Ω—Ñ–∏–≥–µ Nginx"
fi

sudo systemctl reload nginx
success "Nginx –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω —Å HTTPS-–∫–æ–Ω—Ñ–∏–≥–æ–º"

# =============================================
# 7. –°–ê–ú–û–ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´
# =============================================
log "üîç –ü—Ä–æ–≤–æ–∂—É —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫—É..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞: –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ HTTPS?
if ! curl -k -s "https://$DOMAIN" | grep -q "<"; then
    error "HTTPS –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ API?
if ! curl -s "http://localhost:3000/api/status" | grep -q "OK"; then
    log "‚ö†Ô∏è  API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∞–∫—Ç–∏–≤–µ–Ω?
if ! sudo certbot certificates | grep -q "$DOMAIN"; then
    error "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

success "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∞–∫—Ç–∏–≤–µ–Ω"

# =============================================
# üéâ –§–ò–ù–ê–õ
# =============================================
success "‚úÖ –î–æ–º–µ–Ω $DOMAIN –£–°–ü–ï–®–ù–û –ù–ê–°–¢–†–û–ï–ù!"
success "üåê –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ: https://$DOMAIN"
success "üìÑ –õ–æ–≥–∏: $LOG_FILE"
success "üõ°Ô∏è  –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: $CERT_DIR"
success "üöÄ Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç —Å HTTPS"

exit 0
