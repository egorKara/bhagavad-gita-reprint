#!/bin/bash

# ü§ñ –£–°–¢–ê–ù–û–í–ö–ê YANDEX SERVER AGENT
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ Yandex Cloud
# –í–µ—Ä—Å–∏—è: 1.0

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
AGENT_DIR="/home/yc-user/gita-1972/server-agent"
SERVICE_NAME="yandex-server-agent"
SERVICE_FILE="/etc/systemd/system/${SERVICE_NAME}.service"
LOG_DIR="/home/yc-user/gita-1972/logs"

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_header() {
    echo -e "${PURPLE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${PURPLE}‚ïë                   ü§ñ YANDEX SERVER AGENT                    ‚ïë${NC}"
    echo -e "${PURPLE}‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£${NC}"
    echo -e "${PURPLE}‚ïë${NC} –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞         ${PURPLE}‚ïë${NC}"
    echo -e "${PURPLE}‚ïë${NC} –î–∞—Ç–∞: $(date '+%d.%m.%Y %H:%M:%S')                              ${PURPLE}‚ïë${NC}"
    echo -e "${PURPLE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo
}

check_requirements() {
    log_info "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –û–°
    if [[ ! -f /etc/ubuntu-release ]] && [[ ! -f /etc/lsb-release ]]; then
        log_error "‚ùå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ Ubuntu"
        exit 1
    fi
    
    log_success "‚úÖ –û–° —Å–æ–≤–º–µ—Å—Ç–∏–º–∞"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python 3
    if ! command -v python3 &> /dev/null; then
        log_error "‚ùå Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    local python_version=$(python3 --version | cut -d' ' -f2)
    log_success "‚úÖ Python 3 –Ω–∞–π–¥–µ–Ω: $python_version"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ pip
    if ! command -v pip3 &> /dev/null; then
        log_warning "‚ö†Ô∏è pip3 –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º"
        sudo apt update
        sudo apt install -y python3-pip
    fi
    
    log_success "‚úÖ pip3 –¥–æ—Å—Ç—É–ø–µ–Ω"
}

install_dependencies() {
    log_info "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python"
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ apt (–±–æ–ª–µ–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ)
    log_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã —á–µ—Ä–µ–∑ apt"
    sudo apt update -qq
    sudo apt install -y python3-requests python3-psutil 2>/dev/null || true
    
    # –ó–∞—Ç–µ–º —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —á–µ—Ä–µ–∑ pip
    local pip_packages=(
        "schedule>=1.2.0"
    )
    
    for package in "${pip_packages[@]}"; do
        log_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $package —á–µ—Ä–µ–∑ pip"
        python3 -m pip install --break-system-packages "$package" --quiet
    done
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
    if python3 -c "import requests, schedule, psutil; print('All dependencies OK')" 2>/dev/null; then
        log_success "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        log_error "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏"
        return 1
    fi
}

create_directories() {
    log_info "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    sudo mkdir -p "$AGENT_DIR"
    sudo mkdir -p "$LOG_DIR"
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞
    sudo chown -R yc-user:yc-user "/home/yc-user/gita-1972/"
    sudo chmod -R 755 "/home/yc-user/gita-1972/"
    
    log_success "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
}

copy_agent_files() {
    log_info "üìÑ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∞–≥–µ–Ω—Ç–∞"
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –≤ —Ü–µ–ª–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if [[ -f "yandex-server-agent.py" ]]; then
        sudo cp yandex-server-agent.py "$AGENT_DIR/"
        sudo chmod +x "$AGENT_DIR/yandex-server-agent.py"
        log_success "‚úÖ –°–∫—Ä–∏–ø—Ç –∞–≥–µ–Ω—Ç–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
    else
        log_error "‚ùå –§–∞–π–ª yandex-server-agent.py –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    if [[ -f "agent-config.json" ]]; then
        sudo cp agent-config.json "$AGENT_DIR/"
        log_success "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞"
    else
        log_error "‚ùå –§–∞–π–ª agent-config.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
    sudo chown -R yc-user:yc-user "$AGENT_DIR"
}

create_systemd_service() {
    log_info "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞"
    
    # –°–æ–∑–¥–∞–µ–º service —Ñ–∞–π–ª
    sudo tee "$SERVICE_FILE" > /dev/null <<EOF
[Unit]
Description=Yandex Server Agent for Gita 1972 Reprint
After=network.target
Wants=network.target

[Service]
Type=simple
User=yc-user
Group=yc-user
WorkingDirectory=$AGENT_DIR
ExecStart=/usr/bin/python3 $AGENT_DIR/yandex-server-agent.py
Restart=always
RestartSec=10
Environment=PYTHONPATH=$AGENT_DIR
Environment=PATH=/usr/local/bin:/usr/bin:/bin

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
StandardOutput=journal
StandardError=journal
SyslogIdentifier=yandex-server-agent

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
NoNewPrivileges=true
PrivateTmp=true
ProtectSystem=strict
ProtectHome=true
ReadWritePaths=$LOG_DIR /home/yc-user/gita-1972

[Install]
WantedBy=multi-user.target
EOF

    log_success "‚úÖ Systemd —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω"
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd
    sudo systemctl daemon-reload
    log_success "‚úÖ Systemd daemon –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω"
}

setup_log_rotation() {
    log_info "üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤"
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é logrotate
    sudo tee "/etc/logrotate.d/yandex-server-agent" > /dev/null <<EOF
$LOG_DIR/server-agent.log {
    daily
    rotate 30
    compress
    delaycompress
    missingok
    notifempty
    create 644 yc-user yc-user
    postrotate
        systemctl reload yandex-server-agent || true
    endscript
}
EOF

    log_success "‚úÖ –†–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
}

configure_firewall() {
    log_info "üî• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall (–µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ)"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ ufw
    if command -v ufw &> /dev/null; then
        # –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ—Ä—Ç—ã –æ—Ç–∫—Ä—ã—Ç—ã
        sudo ufw allow 22/tcp   # SSH
        sudo ufw allow 80/tcp   # HTTP
        sudo ufw allow 443/tcp  # HTTPS
        sudo ufw allow 3000/tcp # API
        
        log_success "‚úÖ Firewall –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        log_info "‚ÑπÔ∏è UFW –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
    fi
}

create_monitoring_script() {
    log_info "üìä –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∞–≥–µ–Ω—Ç–∞"
    
    cat > "$AGENT_DIR/monitor-agent.sh" <<'EOF'
#!/bin/bash

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–≥–µ–Ω—Ç–∞
echo "ü§ñ YANDEX SERVER AGENT STATUS"
echo "=============================="
echo "–í—Ä–µ–º—è: $(date)"
echo

# –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞
echo "üìã –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞:"
systemctl is-active yandex-server-agent && echo "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" || echo "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
echo

# –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
echo "üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞:"
tail -10 /home/yc-user/gita-1972/logs/server-agent.log 2>/dev/null || echo "–õ–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω"
echo

# –°—Ç–∞—Ç—É—Å –æ—Ç—á–µ—Ç
echo "üìä –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å—Ç–∞—Ç—É—Å-–æ—Ç—á–µ—Ç:"
if [[ -f "/home/yc-user/gita-1972/logs/agent-status.json" ]]; then
    jq -r '.timestamp' /home/yc-user/gita-1972/logs/agent-status.json 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å"
else
    echo "–û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
echo
echo "üíª –†–µ—Å—É—Ä—Å—ã —Å–∏—Å—Ç–µ–º—ã:"
echo "CPU: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)%"
echo "RAM: $(free | grep Mem | awk '{printf "%.1f%%", $3/$2 * 100.0}')"
echo "–î–∏—Å–∫: $(df -h / | awk 'NR==2{printf "%s", $5}')"
EOF

    chmod +x "$AGENT_DIR/monitor-agent.sh"
    log_success "‚úÖ –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ–∑–¥–∞–Ω"
}

start_agent() {
    log_info "üöÄ –ó–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç–∞"
    
    # –í–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
    sudo systemctl enable "$SERVICE_NAME"
    log_success "‚úÖ –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –≤–∫–ª—é—á–µ–Ω"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
    sudo systemctl start "$SERVICE_NAME"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    sleep 3
    if systemctl is-active --quiet "$SERVICE_NAME"; then
        log_success "‚úÖ –ê–≥–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
        echo
        log_info "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞:"
        systemctl status "$SERVICE_NAME" --no-pager -l
        
    else
        log_error "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–≥–µ–Ω—Ç–∞"
        echo
        log_info "üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
        journalctl -u "$SERVICE_NAME" -n 20 --no-pager
        exit 1
    fi
}

show_usage_info() {
    echo
    log_info "üéØ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –ê–ì–ï–ù–¢–ê:"
    echo
    echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞:"
    echo "   systemctl status yandex-server-agent"
    echo
    echo "üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:"
    echo "   journalctl -u yandex-server-agent -f"
    echo
    echo "üîß –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:"
    echo "   sudo systemctl restart yandex-server-agent"
    echo
    echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
    echo "   $AGENT_DIR/monitor-agent.sh"
    echo
    echo "‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
    echo "   nano $AGENT_DIR/agent-config.json"
    echo "   sudo systemctl restart yandex-server-agent  # –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    echo
}

main() {
    log_header
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–ø—É—â–µ–Ω–æ –æ—Ç root –∏–ª–∏ —Å sudo
    if [[ $EUID -ne 0 ]] && [[ -z "${SUDO_USER:-}" ]]; then
        log_error "‚ùå –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å sudo"
        exit 1
    fi
    
    log_info "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É Yandex Server Agent"
    echo
    
    check_requirements
    echo
    
    install_dependencies
    echo
    
    create_directories
    echo
    
    copy_agent_files
    echo
    
    create_systemd_service
    echo
    
    setup_log_rotation
    echo
    
    configure_firewall
    echo
    
    create_monitoring_script
    echo
    
    start_agent
    echo
    
    show_usage_info
    
    log_success "üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!"
    echo
    log_info "ü§ñ Yandex Server Agent —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–≤—Ç–æ–Ω–æ–º–Ω–æ"
    log_info "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: $AGENT_DIR/monitor-agent.sh"
}

# –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
