#!/bin/bash

# üéõÔ∏è CURSOR AGENT DASHBOARD
# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞–º–∏
# –í–µ—Ä—Å–∏—è: 1.0

set -euo pipefail

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

show_header() {
    clear
    echo -e "${CYAN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${CYAN}‚ïë                   ü§ñ CURSOR AGENT DASHBOARD                    ‚ïë${NC}"
    echo -e "${CYAN}‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£${NC}"
    echo -e "${CYAN}‚ïë${NC} –ü—Ä–æ–µ–∫—Ç: ${GREEN}Bhagavad Gita 1972 Reprint${NC}                        ${CYAN}‚ïë${NC}"
    echo -e "${CYAN}‚ïë${NC} –í—Ä–µ–º—è:  ${YELLOW}$(date '+%d.%m.%Y %H:%M:%S')${NC}                              ${CYAN}‚ïë${NC}"
    echo -e "${CYAN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo
}

show_quick_status() {
    echo -e "${BLUE}üìä –ë–´–°–¢–†–´–ô –°–¢–ê–¢–£–°:${NC}"
    
    # API —Å—Ç–∞—Ç—É—Å
    if curl -s --max-time 3 "https://api.gita-1972-reprint.ru/api/status" > /dev/null; then
        echo -e "   API: ${GREEN}‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "   API: ${RED}‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
    
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    local configs=$(ls .cursor/*.json 2>/dev/null | wc -l)
    echo -e "   –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${GREEN}$configs —Ñ–∞–π–ª–æ–≤${NC}"
    
    # –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    if [[ -f ".cursor/sync-status.log" ]]; then
        local last_sync=$(stat -c %Y .cursor/sync-status.log)
        local current_time=$(date +%s)
        local hours=$(( (current_time - last_sync) / 3600 ))
        
        if [[ $hours -lt 6 ]]; then
            echo -e "   –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: ${GREEN}$hours —á. –Ω–∞–∑–∞–¥${NC}"
        else
            echo -e "   –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: ${YELLOW}$hours —á. –Ω–∞–∑–∞–¥${NC}"
        fi
    else
        echo -e "   –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: ${RED}–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö${NC}"
    fi
    
    echo
}

show_menu() {
    echo -e "${PURPLE}üéõÔ∏è –£–ü–†–ê–í–õ–ï–ù–ò–ï:${NC}"
    echo -e "   ${CYAN}1)${NC} üîç –ü–æ–ª–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–≥–µ–Ω—Ç–æ–≤"
    echo -e "   ${CYAN}2)${NC} ‚öôÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≥–µ–Ω—Ç–æ–≤"
    echo -e "   ${CYAN}3)${NC} üéØ –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã"
    echo -e "   ${CYAN}4)${NC} üß† –°—Ç–∞—Ç—É—Å Memory Bank"
    echo -e "   ${CYAN}5)${NC} üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è"
    echo -e "   ${CYAN}6)${NC} üìù –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã"
    echo -e "   ${CYAN}7)${NC} üåê –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
    echo -e "   ${CYAN}8)${NC} üìä –°–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç"
    echo -e "   ${CYAN}9)${NC} üßπ –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏"
    echo -e "   ${CYAN}0)${NC} ‚ùå –í—ã—Ö–æ–¥"
    echo
    echo -n "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: "
}

run_full_monitoring() {
    echo -e "${BLUE}üîç –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...${NC}"
    ./scripts/agent-monitor.sh
    echo
    echo "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    read
}

show_agent_settings() {
    echo -e "${BLUE}‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò –ê–ì–ï–ù–¢–û–í:${NC}"
    echo
    if [[ -f ".cursor/settings.json" ]]; then
        echo "üìã –ö–ª—é—á–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
        grep -A 5 -B 1 "background\|memory" .cursor/settings.json | head -20
    else
        echo -e "${RED}‚ùå –§–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
    echo
    echo "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    read
}

show_priorities() {
    echo -e "${BLUE}üéØ –ü–†–ò–û–†–ò–¢–ï–¢–´ –ê–ì–ï–ù–¢–û–í:${NC}"
    echo
    if [[ -f ".cursor/rules/agent-priorities.mdc" ]]; then
        echo "üìã –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:"
        grep -A 10 "–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ü–†–ò–û–†–ò–¢–ï–¢" .cursor/rules/agent-priorities.mdc
    else
        echo -e "${RED}‚ùå –§–∞–π–ª –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
    echo
    echo "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    read
}

show_memory_bank_status() {
    echo -e "${BLUE}üß† MEMORY BANK STATUS:${NC}"
    echo
    local memory_files=$(find .cursor/memory-bank/ -name "*.md" 2>/dev/null | wc -l)
    echo "üìÅ –§–∞–π–ª–æ–≤ –≤ Memory Bank: $memory_files"
    echo
    if [[ $memory_files -gt 0 ]]; then
        echo "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ:"
        find .cursor/memory-bank/ -name "*.md" -exec basename {} \; | sort
    fi
    echo
    echo "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    read
}

force_sync() {
    echo -e "${BLUE}üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è...${NC}"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    echo "Forced sync initiated at $(date)" >> .cursor/sync-status.log
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ API..."
    curl -s "https://api.gita-1972-reprint.ru/api/status" > /dev/null && echo "API OK" || echo "API FAILED"
    
    echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π..."
    test -f ".cursor/settings.json" && echo "Settings OK" || echo "Settings MISSING"
    
    echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞..."
    echo "Forced sync completed at $(date)" >> .cursor/sync-status.log
    
    echo -e "${GREEN}‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"
    echo
    echo "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    read
}

update_priorities() {
    echo -e "${BLUE}üìù –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤...${NC}"
    echo
    echo "–¢–µ–∫—É—â–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:"
    if [[ -f ".cursor/rules/agent-priorities.mdc" ]]; then
        grep -A 5 "–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ü–†–ò–û–†–ò–¢–ï–¢" .cursor/rules/agent-priorities.mdc | head -10
        echo
        echo "–•–æ—Ç–∏—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤? (y/N)"
        read -n 1 answer
        if [[ $answer == "y" || $answer == "Y" ]]; then
            ${EDITOR:-nano} .cursor/rules/agent-priorities.mdc
            echo -e "${GREEN}‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã${NC}"
        fi
    else
        echo -e "${RED}‚ùå –§–∞–π–ª –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
    echo
    echo "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    read
}

check_all_services() {
    echo -e "${BLUE}üåê –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –°–ï–†–í–ò–°–û–í:${NC}"
    echo
    
    local services=(
        "https://api.gita-1972-reprint.ru/api/status|API"
        "https://gita-1972-reprint.ru/|–û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç"
        "https://egorKara.github.io/bhagavad-gita-reprint/|GitHub Pages"
    )
    
    for service in "${services[@]}"; do
        IFS='|' read -r url name <<< "$service"
        echo -n "–ü—Ä–æ–≤–µ—Ä—è—é $name... "
        if curl -s --max-time 5 "$url" > /dev/null; then
            echo -e "${GREEN}‚úÖ OK${NC}"
        else
            echo -e "${RED}‚ùå FAILED${NC}"
        fi
    done
    echo
    echo "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    read
}

create_report() {
    echo -e "${BLUE}üìä –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞...${NC}"
    
    local report_file=".cursor/dashboard-report-$(date +%Y%m%d-%H%M%S).log"
    
    {
        echo "=== CURSOR AGENT DASHBOARD REPORT ==="
        echo "–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è: $(date)"
        echo "–ü—Ä–æ–µ–∫—Ç: Bhagavad Gita 1972 Reprint"
        echo
        
        echo "–ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò:"
        ls -la .cursor/*.json 2>/dev/null || echo "–ù–µ—Ç JSON –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π"
        echo
        
        echo "–ü–†–ò–û–†–ò–¢–ï–¢–´:"
        test -f ".cursor/rules/agent-priorities.mdc" && echo "–§–∞–π–ª –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω" || echo "–§–∞–π–ª –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        echo
        
        echo "–°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø:"
        tail -3 .cursor/sync-status.log 2>/dev/null || echo "–ù–µ—Ç –ª–æ–≥–æ–≤ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"
        echo
        
        echo "–°–ï–†–í–ò–°–´:"
        curl -s --max-time 3 "https://api.gita-1972-reprint.ru/api/status" > /dev/null && echo "API: OK" || echo "API: FAILED"
        curl -s --max-time 3 "https://gita-1972-reprint.ru/" > /dev/null && echo "Site: OK" || echo "Site: FAILED"
        
    } > "$report_file"
    
    echo -e "${GREEN}‚úÖ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: $report_file${NC}"
    echo
    echo "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    read
}

cleanup_logs() {
    echo -e "${BLUE}üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤...${NC}"
    echo
    
    # –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
    find .cursor/ -name "*.log" -mtime +7 -exec ls -la {} \;
    
    echo "–ù–∞–π–¥–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏ (>7 –¥–Ω–µ–π). –£–¥–∞–ª–∏—Ç—å –∏—Ö? (y/N)"
    read -n 1 answer
    if [[ $answer == "y" || $answer == "Y" ]]; then
        find .cursor/ -name "*.log" -mtime +7 -delete
        echo -e "${GREEN}‚úÖ –°—Ç–∞—Ä—ã–µ –ª–æ–≥–∏ —É–¥–∞–ª–µ–Ω—ã${NC}"
    else
        echo "–û—á–∏—Å—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
    fi
    echo
    echo "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    read
}

main() {
    while true; do
        show_header
        show_quick_status
        show_menu
        
        read choice
        
        case $choice in
            1) run_full_monitoring ;;
            2) show_agent_settings ;;
            3) show_priorities ;;
            4) show_memory_bank_status ;;
            5) force_sync ;;
            6) update_priorities ;;
            7) check_all_services ;;
            8) create_report ;;
            9) cleanup_logs ;;
            0) echo -e "${GREEN}üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"; exit 0 ;;
            *) echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä${NC}"; sleep 2 ;;
        esac
    done
}

# –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
