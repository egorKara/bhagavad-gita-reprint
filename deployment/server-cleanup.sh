#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞–≤–µ–¥–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
# –û—á–∏—Å—Ç–∫–∞, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è, –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏

set -e

echo "üßπ –ù–ê–í–ï–î–ï–ù–ò–ï –ü–û–†–Ø–î–ö–ê –ù–ê –°–ï–†–í–ï–†–ï"
echo "==============================="
echo "–î–∞—Ç–∞: $(date)"
echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $(whoami)"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ sudo
check_sudo() {
    if [ "$EUID" -ne 0 ]; then
        echo "‚ùå –û—à–∏–±–∫–∞: –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å sudo"
        echo "   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: sudo bash deployment/server-cleanup.sh"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞
check_disk_space() {
    log "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞..."
    df -h / | head -2
    
    available=$(df / | tail -1 | awk '{print $4}')
    if [ "$available" -lt 1048576 ]; then  # –ú–µ–Ω—å—à–µ 1GB
        log "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ú–∞–ª–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ"
    fi
    echo ""
}

# –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–æ–≤
cleanup_logs() {
    log "üìù –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–æ–≤..."
    
    # –û—á–∏—Å—Ç–∫–∞ –∂—É—Ä–Ω–∞–ª–æ–≤ systemd —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π
    journalctl --vacuum-time=7d
    
    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤
    find /var/log -name "*.log" -type f -mtime +30 -exec rm -f {} \;
    find /var/log -name "*.gz" -type f -mtime +30 -exec rm -f {} \;
    
    # –û—á–∏—Å—Ç–∫–∞ nginx –ª–æ–≥–æ–≤ —Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π
    find /var/log/nginx -name "*.log" -type f -mtime +30 -exec rm -f {} \;
    
    log "‚úÖ –õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã"
    echo ""
}

# –û—á–∏—Å—Ç–∫–∞ –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –∫—ç—à–∞
cleanup_packages() {
    log "üì¶ –û—á–∏—Å—Ç–∫–∞ –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –∫—ç—à–∞..."
    
    # APT –æ—á–∏—Å—Ç–∫–∞
    apt-get autoremove -y
    apt-get autoclean
    apt-get clean
    
    # –û—á–∏—Å—Ç–∫–∞ snap –ø–∞–∫–µ—Ç–æ–≤
    if command -v snap &> /dev/null; then
        snap list --all | awk '/disabled/{print $1, $3}' | \
        while read snapname revision; do
            snap remove "$snapname" --revision="$revision"
        done
    fi
    
    log "‚úÖ –ü–∞–∫–µ—Ç–Ω—ã–π –∫—ç—à –æ—á–∏—â–µ–Ω"
    echo ""
}

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
cleanup_temp() {
    log "üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    find /tmp -type f -atime +7 -delete 2>/dev/null || true
    find /var/tmp -type f -atime +7 -delete 2>/dev/null || true
    
    # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ thumbnails
    find /home/*/\.cache/thumbnails -type f -atime +30 -delete 2>/dev/null || true
    
    log "‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã"
    echo ""
}

# –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Nginx
optimize_nginx() {
    log "üåê –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Nginx..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if nginx -t; then
        log "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
        
        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        systemctl reload nginx
        log "üîÑ Nginx –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω"
    else
        log "‚ùå –û—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx!"
        nginx -t
    fi
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
check_services() {
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    services=("nginx" "ssh" "ufw")
    
    for service in "${services[@]}"; do
        if systemctl is-active --quiet "$service"; then
            log "‚úÖ $service - —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            log "‚ùå $service - –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
            systemctl status "$service" --no-pager -l
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Å–µ—Ä–≤–∏—Å–∞ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if systemctl list-unit-files | grep -q "gita-api"; then
        if systemctl is-active --quiet "gita-api"; then
            log "‚úÖ gita-api - —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            log "‚ùå gita-api - –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
        fi
    fi
    echo ""
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
update_system() {
    log "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
    apt-get update
    
    # –ü–æ–∫–∞–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    updates=$(apt list --upgradable 2>/dev/null | wc -l)
    if [ "$updates" -gt 1 ]; then
        log "üì• –î–æ—Å—Ç—É–ø–Ω–æ $((updates-1)) –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"
        echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ 'sudo apt upgrade' –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
    else
        log "‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
    fi
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
security_check() {
    log "üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if grep -q "PermitRootLogin yes" /etc/ssh/sshd_config 2>/dev/null; then
        log "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: SSH root –ª–æ–≥–∏–Ω —Ä–∞–∑—Ä–µ—à–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
    if command -v ufw &> /dev/null; then
        if ufw status | grep -q "Status: active"; then
            log "‚úÖ UFW —Ñ–∞–π—Ä–≤–æ–ª –∞–∫—Ç–∏–≤–µ–Ω"
        else
            log "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: UFW —Ñ–∞–π—Ä–≤–æ–ª –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ fail2ban
    if systemctl is-active --quiet fail2ban 2>/dev/null; then
        log "‚úÖ Fail2ban –∞–∫—Ç–∏–≤–µ–Ω"
    else
        log "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: Fail2ban –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω/–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"
    fi
    
    echo ""
}

# –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Node.js –ø—Ä–æ–µ–∫—Ç–æ–≤
optimize_nodejs() {
    log "üì¶ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Node.js –ø—Ä–æ–µ–∫—Ç–æ–≤..."
    
    # –ü–æ–∏—Å–∫ Node.js –ø—Ä–æ–µ–∫—Ç–æ–≤
    find /var/www -name "package.json" 2>/dev/null | while read -r package_file; do
        project_dir=$(dirname "$package_file")
        log "üîç –ù–∞–π–¥–µ–Ω –ø—Ä–æ–µ–∫—Ç: $project_dir"
        
        cd "$project_dir"
        
        # –û—á–∏—Å—Ç–∫–∞ node_modules –µ—Å–ª–∏ –µ—Å—Ç—å package-lock.json
        if [ -f "package-lock.json" ] && [ -d "node_modules" ]; then
            log "üßπ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ $project_dir"
            rm -rf node_modules
            npm ci --production
        fi
        
        # –û—á–∏—Å—Ç–∫–∞ npm –∫—ç—à–∞
        npm cache clean --force 2>/dev/null || true
    done
    
    log "‚úÖ Node.js –ø—Ä–æ–µ–∫—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
    echo ""
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
generate_report() {
    log "üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞..."
    
    report_file="/tmp/server-report-$(date +%Y%m%d-%H%M%S).txt"
    
    {
        echo "–û–¢–ß–ï–¢ –û –°–û–°–¢–û–Ø–ù–ò–ò –°–ï–†–í–ï–†–ê"
        echo "========================="
        echo "–î–∞—Ç–∞: $(date)"
        echo ""
        
        echo "–î–ò–°–ö–û–í–û–ï –ü–†–û–°–¢–†–ê–ù–°–¢–í–û:"
        df -h
        echo ""
        
        echo "–ü–ê–ú–Ø–¢–¨:"
        free -h
        echo ""
        
        echo "–ó–ê–ì–†–£–ó–ö–ê CPU:"
        uptime
        echo ""
        
        echo "–ê–ö–¢–ò–í–ù–´–ï –°–ï–†–í–ò–°–´:"
        systemctl list-units --state=running --type=service | head -20
        echo ""
        
        echo "–°–ï–¢–ï–í–´–ï –°–û–ï–î–ò–ù–ï–ù–ò–Ø:"
        ss -tulpn | grep LISTEN | head -10
        echo ""
        
        echo "–ü–û–°–õ–ï–î–ù–ò–ï –õ–û–ì–ò:"
        journalctl --since "1 hour ago" --no-pager | tail -10
        
    } > "$report_file"
    
    log "üìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $report_file"
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    check_sudo
    
    log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞–≤–µ–¥–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞..."
    echo ""
    
    check_disk_space
    cleanup_logs
    cleanup_packages
    cleanup_temp
    optimize_nginx
    check_services
    update_system
    security_check
    optimize_nodejs
    generate_report
    
    log "üéâ –ù–∞–≤–µ–¥–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo ""
    echo "üìà –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:"
    echo "‚Ä¢ –õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã ‚úÖ"
    echo "‚Ä¢ –ü–∞–∫–µ—Ç–Ω—ã–π –∫—ç—à –æ—á–∏—â–µ–Ω ‚úÖ"
    echo "‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã ‚úÖ"
    echo "‚Ä¢ Nginx –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω ‚úÖ"
    echo "‚Ä¢ –°–µ—Ä–≤–∏—Å—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã ‚úÖ"
    echo "‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ ‚úÖ"
    echo "‚Ä¢ Node.js –ø—Ä–æ–µ–∫—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã ‚úÖ"
    echo ""
    echo "üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"
    echo "‚Ä¢ –ó–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ"
    echo "‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –¥–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ"
    echo "‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ —Å–∏—Å—Ç–µ–º—É"
    echo "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏"
    echo ""
    echo "üìä –û—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞: $report_file"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
